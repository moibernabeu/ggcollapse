names(node_colours) <- names(nodes)
nodelab_colours <- rep('black', length(nodes))
names(nodelab_colours) <- names(nodes)
} else {
nodelab_colours <- node_colours
}
for (node in 1:length(new_nodes)) {
p <- ggtree::collapse(p, new_nodes[node], mode = collapse_mode,
fill = node_colours[names(nodes)[node]],
colour = 'black')
}
for (node in 1:length(new_nodes)) {
lab = paste0(names(nodes)[node], ' (', ntips[node], ')')
p <- p + ggtree::geom_cladelab(new_nodes[node],
label = lab,
offset.text = offset[node],
hjust = hjust[node],
vjust = vjust[node],
textcolour = nodelab_colours[names(nodes)[node]])
}
return(p)
}
ggcollapse(tree, mphy, collapse_mode = 'mixed', node_colours = cols)
sist <- get_sisters(atree, 36, 'group')
ggcollapse(tree, sist, collapse_mode = 'mixed') +
hexpand(0.15)
# Collapsing monophyletics of the group
mphy <- get_monophyletics(atree, 'group')
ggcollapse(tree, mphy, collapse_mode = 'mixed', node_colours = cols)
devtools::check()
devtools::load('.')
devtools::load_all('.')
get_sp <- function(header) {
return(header)
}
set.seed(2024-11-04)
tree <- rtree(20)
# Annotate tree
library(treeio)
set.seed(2024-11-04)
tree <- rtree(20)
tree_data <- data.frame(tip = tree$tip.label,
group = c(rep('A', 10), rep('B', 10)))
tree_data
atree <- annotate_tree(tree = tree,
tree_data = tree_data,
get_sp = get_sp,
data_sp_column = 1)
atree
# Get monophyletics
library(treeio)
get_sp <- function(header) {
return(header)
}
set.seed(2024-11-04)
tree <- rtree(20)
tree_data <- data.frame(tip = tree$tip.label,
group = c(rep('A', 10), rep('B', 10)))
atree <- annotate_tree(tree = tree,
tree_data = tree_data,
get_sp = get_sp,
data_sp_column = 1)
mphy <- get_monophyletics(atree, 'group')
mphy
ggtree(atree) +
geom_nodelab(aes(subset = node %in% mphy, label = node), geom = 'label') +
geom_tiplab(aes(label = group))
library(ggtree)
get_sp <- function(header) {
return(header)
}
set.seed(2024-11-04)
tree <- rtree(20)
tree_data <- data.frame(tip = tree$tip.label,
group = c(rep('A', 10), rep('B', 10)))
atree <- annotate_tree(tree = tree,
tree_data = tree_data,
get_sp = get_sp,
data_sp_column = 1)
mphy <- get_monophyletics(atree, 'group')
mphy
ggtree(atree) +
geom_nodelab(aes(subset = node %in% mphy, label = node), geom = 'label') +
geom_tiplab(aes(label = group))
# Get sisters
library(treeio)
get_sp <- function(header) {
return(header)
}
set.seed(2024-11-04)
library(ggtree)
get_sp <- function(header) {
return(header)
}
set.seed(2024-11-04)
tree <- rtree(20)
tree_data <- data.frame(tip = tree$tip.label,
group = c(rep('A', 10), rep('B', 10)))
atree <- annotate_tree(tree = tree,
tree_data = tree_data,
get_sp = get_sp,
data_sp_column = 1)
ggtree(atree) +
geom_nodelab(aes(label = node), geom = 'label') +
geom_tiplab()
# Getting sisters to node 36
get_sisters(tree, 36)
# Getting sisters to t7
get_sisters(atree, 't7')
# Getting sisters to node 36 annotated with the percentage of tips with a
# certain value of the given naming_column
get_sisters(atree, 36, naming_column = 'group')
# ggcollapse
library(treeio)
library(ggtree)
set.seed(2024-11-04)
tree <- rtree(20)
tree_data <- data.frame(tip = tree$tip.label,
group = c(rep('A', 10), rep('B', 10)))
atree <- annotate_tree(tree = tree,
tree_data = tree_data,
get_sp = get_sp,
data_sp_column = 1)
# Collapsing monophyletics of the group
mphy <- get_monophyletics(atree, 'group')
cols <- c('A' = 'steelblue', 'B' = 'darkorange')
set.seed(2024-11-04)
tree <- rtree(20)
tree_data <- data.frame(tip = tree$tip.label,
group = c(rep('A', 10), rep('B', 10)))
atree <- annotate_tree(tree = tree,
tree_data = tree_data,
get_sp = get_sp,
data_sp_column = 1)
# Collapsing monophyletics of the group
mphy <- get_monophyletics(atree, 'group')
cols <- c('A' = 'steelblue', 'B' = 'darkorange')
ggcollapse(tree, mphy, collapse_mode = 'mixed', node_colours = cols)
# Collapsing sisters
sist <- get_sisters(atree, 36, 'group')
ggcollapse(tree, sist, collapse_mode = 'mixed') +
hexpand(0.15)
devtools::load_all('')
devtools::load_all('.')
?ggcollapse
?annotate_tree
devtools::build_manual()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::load_all('.')
?annotate_tree
devtools::install('.')
devtools::install_github('moibernabeu/ggcollapse')
?annotate_tree
?ggcollapse
devtools::install_github('moibernabeu/ggcollapse')
devtools::install_github('moibernabeu/ggcollapse', force = TRUE)
library(ggcollapse)
annot_tree <- annotate_tree(tree = tree,
tree_data = tree_data,
get_sp = get_sp,
data_sp_column = 'species')
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, fig.align = 'center', out.width = '60%',
fig.width = 5, fig.height = 4, warning = FALSE,
message = FALSE)
# Chunk 3
library(treeio)
set.seed(2024-11-04)
tree <- rtree(20)
# Chunk 4
tree$tip.label[3:20] <- paste(tree$tip.label[3:20], LETTERS[2:19], sep = '_')
# Adding a species duplication in the tree
tree$tip.label[1:2] <- paste(tree$tip.label[1:2], 'A', sep = '_')
# Chunk 5
library(ggtree)
ggtree(tree) +
geom_tiplab() +
geom_nodelab(aes(label = node), geom = 'label') +
xlim(0, 5.5)
# Chunk 6
library(stringr)
get_sp <- function(tip.label) {
return(str_split(tip.label, '_', n = 2, simplify = TRUE)[, 2])
}
tree$tip.label[1]
get_sp(tree$tip.label[1])
# Chunk 7
groups <- c(rep('G1', 7), rep('G2', 3), rep('G3', 9))
tree_data <- data.frame(species = LETTERS[1:19],
group = groups)
head(tree_data, n = 4)
group_colours <- c('G1' = 'coral3',
'G2' = 'steelblue',
'G3' = 'darkolivegreen4')
# Chunk 8
library(ggcollapse)
annot_tree <- annotate_tree(tree = tree,
tree_data = tree_data,
get_sp = get_sp,
data_sp_column = 'species')
# Chunk 9
ggtree(annot_tree) +
geom_tiplab(offset = 0.035) +
geom_tippoint(aes(colour = group)) +
scale_colour_manual(values = group_colours) +
xlim(0, 5.5)
# Chunk 10
gr_mphy <- get_monophyletics(tree = annot_tree,
group_column = 'group')
gr_mphy
# Chunk 11
tip_sisters <- get_sisters(tree = tree,
node = 't8_O')
tip_sisters
tip_num <- which(tree$tip.label == 't8_O')
tip_sisters_num <- get_sisters(tree = tree,
node = tip_num)
tip_sisters_num == tip_sisters
# Chunk 12
tip_sisters_nmd <- get_sisters(tree = annot_tree,
node = 't8_O',
naming_column = 'group')
tip_sisters_nmd
# Chunk 13
node_sisters <- get_sisters(tree = tree,
node = 26)
node_sisters
node_sisters_nmd <- get_sisters(tree = annot_tree,
node = 26,
naming_column = 'group')
node_sisters_nmd
# Chunk 14
# names(tip_sisters) <-
ggcollapse(tree, tip_sisters)
names(tip_sisters) <- paste('S', 1:length(tip_sisters), sep = '')
tip_sisters
ggcollapse(tree, tip_sisters)
ggcollapse(tree, tip_sisters) +
geom_tiplab()
ggcollapse(tree, gr_mphy)
# Collapsing the monophyletic groups
ggcollapse(tree, gr_mphy)
Nnode(tree)
read.newick('data/trees_gg.nwk')
read.tree('data/trees_gg.nwk')
read.tree('../../phygeno/ggcollapse/data/trees_gg.nwk')
read.tree('../../phygeno/ggcollapse/data/trees_gg.nwk')
read.tree('../phygeno/ggcollapse/data/trees_gg.nwk')
read.tree('../phygeno/ggcollapse/data/trees_gg.nwk')[[1]]
tr <- read.tree('../phygeno/ggcollapse/data/trees_gg.nwk')[[1]]
tr$node.label
length(tr$node.label)
Ntip(tr)
runif(length(tree) - 1, 0, 100)
runif(length(tree$tip.label) - 1, 0, 100)
set.seed(09-08-1997)
tree$node.label <- runif(length(tree$tip.label) - 1, 0, 100)
tree$node.label
set.seed(09-08-1997)
tree$node.label <- runif(length(tree$tip.label) - 1, 25, 100)
tree$node.label
set.seed(09-08-1997)
tree$node.label <- runif(length(tree$tip.label) - 2, 25, 100)
ggcollapse(tree, gr_mphy)
ggcollapse(tree, gr_mphy) +
geom_nodelab()
set.seed(09-08-1997)
tree$node.label <- round(runif(length(tree$tip.label) - 2, 25, 100))
tree$node.label
ggcollapse(tree, gr_mphy) +
geom_nodelab()
ggcollapse(tree, gr_mphy) +
geom_nodelab(aes(x = branch))
ggcollapse(tree, gr_mphy) +
geom_nodelab(aes(x = branch), nudge_y = 1)
ggcollapse(tree, gr_mphy) +
geom_nodelab(aes(x = branch), nudge_y = 1)
ggcollapse(tree, gr_mphy) +
geom_nodelab(aes(x = branch), nudge_y = 0.25)
ggcollapse(tree, gr_mphy) +
geom_nodelab(aes(x = branch), nudge_y = 0.1)
tree$node.label <- c(NA, round(runif(length(tree$tip.label) - 2, 25, 100)))
ggcollapse(tree, gr_mphy) +
geom_nodelab(aes(x = branch), nudge_y = 0.1)
ggcollapse(tree, gr_mphy) +
geom_nodelab(aes(x = branch), nudge_y = 0.15)
# Collapsing the monophyletic groups
ggcollapse(tree, gr_mphy, node_colours = group_colours)
# Collapsing the monophyletic groups
ggcollapse(tree = tree,
nodes = gr_mphy,
node_colours = group_colours)
ggcollapse(tree = tree,
nodes = gr_mphy,
node_colours = group_colours) +
geom_nodelab(aes(x = branch), nudge_y = 0.15)
# Collapsing the monophyletic groups
ggcollapse(tree = tree,
nodes = gr_mphy,
node_colours = group_colours) +
xlim(0, 5.5)
# Collapsing the monophyletic groups
ggcollapse(tree = tree,
nodes = gr_mphy,
node_colours = group_colours) +
xlim(0, 5)
# Collapsing the monophyletic groups
ggcollapse(tree = tree,
nodes = gr_mphy,
node_colours = group_colours) +
xlim(0, 2)
# Collapsing the monophyletic groups
ggcollapse(tree = tree,
nodes = gr_mphy,
node_colours = group_colours) +
xlim(0, 1)
# Collapsing the sister nodes
ggcollapse(tree = tree,
nodes = tip_sisters) +
geom_tiplab() +
xlim(0, 1)
# Collapsing the sister nodes
ggcollapse(tree = tree,
nodes = tip_sisters) +
geom_tiplab() +
xlim(0, 10)
# Collapsing the sister nodes
ggcollapse(tree = tree,
nodes = tip_sisters) +
geom_tiplab() +
xlim(0, 5)
# Collapsing the sister nodes
ggcollapse(tree = tree,
nodes = tip_sisters) +
geom_tiplab() +
xlim(0, 2)
# Collapsing the sister nodes
ggcollapse(tree = tree,
nodes = tip_sisters) +
geom_tiplab() +
xlim(0, 0.1)
# Collapsing the sister nodes
ggcollapse(tree = tree,
nodes = tip_sisters) +
geom_tiplab() +
xlim(0, 1)
# Collapsing the sister nodes
ggcollapse(tree = tree,
nodes = tip_sisters) +
geom_tiplab() +
xlim(0, 1.2)
# Collapsing the sister nodes
ggcollapse(tree = tree,
nodes = tip_sisters) +
geom_tiplab() +
xlim(0, 1.1)
ggcollapse(tree = tree,
nodes = tip_sisters,
get_sp = get_sp,
tree_data = tree_data,
data_sp_column = 'species') +
geom_tiplab() +
xlim(0, 1.1)
ggcollapse(tree = tree,
nodes = tip_sisters,
get_sp = get_sp,
tree_data = tree_data,
data_sp_column = 'species') +
geom_tiplab(aes(label = 'species')) +
xlim(0, 1.1)
ggcollapse(tree = tree,
nodes = tip_sisters,
get_sp = get_sp,
tree_data = tree_data,
data_sp_column = 'species') +
geom_tiplab(aes(label = species)) +
xlim(0, 1.1)
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'mixed',
node_colours = group_colours) +
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'max',
node_colours = group_colours) +
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'min'
node_colours = group_colours)
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'mixed',
node_colours = group_colours) +
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'max',
node_colours = group_colours) +
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'min',
node_colours = group_colours)
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'mixed',
node_colours = group_colours) +
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'max',
node_colours = group_colours) +
xlim(0, 1.1) +
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'min',
node_colours = group_colours) +
xlim(0, 1.1)
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'mixed',
node_colours = group_colours) +
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'max',
node_colours = group_colours) +
xlim(0, 1.1) +
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'min',
node_colours = group_colours) +
xlim(0, 1.05)
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'mixed',
node_colours = group_colours) +
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'max',
node_colours = group_colours) +
xlim(0, 1.15) +
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'min',
node_colours = group_colours) +
xlim(0, 1.05)
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'mixed',
node_colours = group_colours) +
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'max',
node_colours = group_colours) +
xlim(0, 1.15) +
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'min',
node_colours = group_colours) +
xlim(0, 1)
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'mixed',
node_colours = group_colours) +
xlim(0, 1.15)
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'mixed',
node_colours = group_colours) +
xlim(0, 1.15) +
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'max',
node_colours = group_colours) +
xlim(0, 1.15) +
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'min',
node_colours = group_colours) +
xlim(0, 1)
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'mixed',
node_colours = group_colours) +
xlim(0, 1.15) +
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'max',
node_colours = group_colours) +
xlim(0, 1.15) +
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'min',
node_colours = group_colours) +
xlim(0, 0.9)
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'mixed',
node_colours = group_colours) +
xlim(0, 1.15) +
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'max',
node_colours = group_colours) +
xlim(0, 1.15) +
ggcollapse(tree = tree,
nodes = gr_mphy,
collapse_mode = 'min',
node_colours = group_colours) +
xlim(0, 0.8)
knit_with_parameters("~/Documents/mounted/cluster/new_software/general/phygeno/ggcollapse/ggcollapse_tutorial.Rmd")
